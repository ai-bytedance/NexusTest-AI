{{- if .Values.nginx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nexustest-ai.nginxName" . }}
  labels:
    {{- include "nexustest-ai.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "nexustest-ai.name" . }}
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "nexustest-ai.name" . }}
        app.kubernetes.io/component: nginx
        {{- with .Values.nginx.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nginx.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "nexustest-ai.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . | quote }}
        {{- end }}
      {{- end }}
      {{- $podSecurityContext := dict -}}
      {{- if .Values.global.podSecurityContext }}
      {{- $podSecurityContext = merge $podSecurityContext (deepCopy .Values.global.podSecurityContext) -}}
      {{- end }}
      {{- if .Values.nginx.podSecurityContext }}
      {{- $podSecurityContext = merge $podSecurityContext (deepCopy .Values.nginx.podSecurityContext) -}}
      {{- end }}
      {{- if $podSecurityContext }}
      securityContext:
        {{- toYaml $podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: nginx
          {{- $image := merge (deepCopy (dict "repository" "nginx" "tag" "latest" "pullPolicy" "IfNotPresent")) (deepCopy .Values.nginx.image) -}}
          {{- $repository := $image.repository -}}
          {{- $tag := default "latest" $image.tag -}}
          {{- $pullPolicy := default "IfNotPresent" $image.pullPolicy -}}
          image: "{{ $repository }}:{{ $tag }}"
          imagePullPolicy: {{ $pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.nginx.service.port }}
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          {{- $securityContext := dict -}}
          {{- if .Values.global.securityContext }}
          {{- $securityContext = merge $securityContext (deepCopy .Values.global.securityContext) -}}
          {{- end }}
          {{- if .Values.nginx.securityContext }}
          {{- $securityContext = merge $securityContext (deepCopy .Values.nginx.securityContext) -}}
          {{- end }}
          {{- if $securityContext }}
          securityContext:
            {{- toYaml $securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.nginx.resources }}
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ printf "%s-nginx" (include "nexustest-ai.fullname" .) }}
      {{- with .Values.nginx.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nginx.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nginx.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nginx.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
