worker_processes auto;

env HSTS_ENABLED;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    map $http_x_forwarded_proto $is_https {
        default 0;
        https 1;
    }
    map $is_https$HSTS_ENABLED $hsts_hdr {
        default "";
        ~^10$ "max-age=31536000; includeSubDomains; preload";
    }

    map $http_origin $cors_origin {
        default $http_origin;
        "" "*";
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;
    }

    sendfile on;
    keepalive_timeout 65;

    gzip on;
    gzip_comp_level 6;
    gzip_min_length 512;
    gzip_vary on;
    gzip_types application/json text/plain text/css application/javascript;

    client_max_body_size 10m;
    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_status 429;

    upstream api_upstream {
        server api:8000;
    }

    upstream flower_upstream {
        server flower:5555;
    }

    server {
        listen 80;
        server_name _;

        add_header X-Request-Id $request_id always;
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Allow-Headers "Authorization,Content-Type" always;
        add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;

        if ($hsts_hdr != "") {
            add_header Strict-Transport-Security $hsts_hdr always;
        }

        location = /api {
            return 301 /api/;
        }

        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;

            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-Id $request_id;
            proxy_pass http://api_upstream;
        }

        location /ws/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-Id $request_id;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            proxy_pass http://api_upstream;
        }

        location = /flower {
            return 301 /flower/;
        }

        location /flower/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-Id $request_id;
            proxy_pass http://flower_upstream;
        }

        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }
    }
}
